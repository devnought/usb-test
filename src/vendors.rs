use std::collections::HashSet;

use strum::{EnumIter, FromRepr, IntoEnumIterator};

#[derive(Debug, PartialEq, EnumIter, FromRepr)]
#[repr(u16)]
pub enum Vendors {
    Apple = 0x05ac,
    Google = 0x18d1,
    Intel = 0x8087,
    Htc = 0x0bb4,
    Samsung = 0x04e8,
    Motorola = 0x22b8,
    LG = 0x1004,
    Huawei = 0x12D1,
    Acer = 0x0502,
    SonyEricsson = 0x0FCE,
    Foxconn = 0x0489,
    Dell = 0x413c,
    Nvidia = 0x0955,
    GarminAsus = 0x091E,
    Sharp = 0x04dd,
    Zte = 0x19D2,
    Kyocera = 0x0482,
    Pantech = 0x10A9,
    Qualcomm = 0x05c6,
    OnTheGoVideo = 0x2257,
    Nec = 0x0409,
    PanasonicMobileCommunication = 0x04DA,
    Toshiba = 0x0930,
    Telesys = 0x1F53,
    KtTech = 0x2116,
    Asus = 0x0b05,
    Philips = 0x0471,
    TexasInstruments = 0x0451,
    Funai = 0x0F1C,
    Gigabyte = 0x0414,
    IRiver = 0x2420,
    Compal = 0x1219,
    TAndAMobilePhones = 0x1BBB,
    LenovoMobile = 0x2006,
    Lenovo = 0x17EF,
    Vizio = 0xE040,
    KTouch = 0x24E3,
    Pegatron = 0x1D4D,
    Archos = 0x0E79,
    Positivo = 0x1662,
    Fujitsu = 0x04C5,
    Lumigon = 0x25E3,
    Quanta = 0x0408,
    INQMobile = 0x2314,
    Sony = 0x054C,
    Lab126 = 0x1949,
    YulongCoolpad = 0x1EBF,
    Kobo = 0x2237,
    Teleepoch = 0x2340,
    AnyDATA = 0x16D5,
    Harris = 0x19A5,
    Oppo = 0x22D9,
    Xiaomi = 0x2717,
    Byd = 0x19D1,
    Ouya = 0x2836,
    Haier = 0x201E,
    Hisense = 0x109b,
    Mtk = 0x0e8d,
    BAndNNook = 0x2080,
    Qisda = 0x1D45,
    Ecs = 0x03fc,
}

pub fn vendor_set() -> HashSet<u16> {
    Vendors::iter().map(|v| v as u16).collect::<HashSet<_>>()
}
